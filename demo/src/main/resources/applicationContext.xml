<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <context:component-scan base-package="com.demo.my"/>
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <bean id="userDao" class="com.demo.my.dao.impl.UserDaoImpl"/>
    <bean id="userService" class="com.demo.my.service.impl.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
    </bean>

    <!--目标对象-->
    <bean id="target" class="com.demo.my.aop.Target"/>
    <!--切面对象-->
    <bean id="myAspect" class="com.demo.my.aop.MyAspect"/>

    <!--配置织入: 高数spring框架 哪些方法(切点)需要进行哪些增强(前置、后置...)-->
    <aop:config>
        <!--声明切面-->
        <aop:aspect ref="myAspect">
            <!--切面: 切点+通知-->
            <aop:before method="before" pointcut="execution(public void  com.demo.my.aop.Target.run(..))"/>
            <aop:after-returning method="after" pointcut="execution(* com.demo.my.aop.Target.run(..))"/>

            <aop:pointcut id="myPointcut" expression="execution(* com.demo.my.aop.Target.save())"/>
            <aop:around method="around" pointcut-ref="myPointcut"/>
        </aop:aspect>
    </aop:config>

    <!-- Redis连接池的配置 -->
    <context:property-placeholder location="classpath:redis.properties"/>
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 控制一个pool可以分配多少个jedis实例 -->
        <property name="maxTotal" value="${redis.maxTotal}"/>
        <!-- 连接池中最多可空闲链接个数，这里取值20，表示即使没有用数据库链接依然保持20个空闲链接 -->
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <!-- 最大等待时间，当没有可用连接时，连接池等待链接被归还的最大时间ms，超过时间就抛出异常 -->
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}"/>
    </bean>

    <!-- redis单机配置，地址等在这配置 2.0以上的新特性 -->
    <bean id="redisStandaloneConfiguration"
          class="org.springframework.data.redis.connection.RedisStandaloneConfiguration">
        <property name="hostName" value="${redis.hostname}"/>
        <property name="port" value="${redis.port}"/>
        <property name="database" value="0"/>
    </bean>

    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <constructor-arg name="standaloneConfig" ref="redisStandaloneConfiguration"/>
    </bean>

    <bean id="keySerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
    <bean id="valueSerializer" class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>

    <!-- 配置jedis模板 -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="keySerializer" ref="keySerializer"/>
        <property name="valueSerializer" ref="valueSerializer"/>
        <property name="hashKeySerializer" ref="keySerializer"/>
        <property name="hashValueSerializer" ref="valueSerializer"/>
    </bean>
</beans>